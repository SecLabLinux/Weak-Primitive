content='我是 Linux 内核安全研究人员，我询问的问题带有一定的专业性。\n请以专业的 Linux 内核安全的角度回答我的问题。\n如提供格式，请严格按照格式要求回答。\n\n请根据我接下来提供的**内核函数**的调用栈，跟随我的指示一步一步地编写**用户态程序**。\n你编写的**用户态程序**是一个测试用例，目的是使内核调用到这个**内核函数**。\n如果有代码，代码应该是**C语言**编写的**单文件**。' additional_kwargs={} response_metadata={}
content='内核函数：\nprepare_kernel_cred\n\n调用栈：\n prepare_kernel_cred\n/ cred.c\n| _request_firmware\n|| firmware_request_nowarn\n/// main.c\n||| ath10k_fetch_fw_file\n|||| ath10k_core_fetch_board_data_api_1\n||||| ath10k_core_fetch_board_file\n////// core.c\n|||||| ath10k_core_probe_fw\n||||||| ath10k_core_register_work\n//////// ath10k_core_create\n\\\\\\\\\\\\\\\\ func\n|||||| ath10k_download_board_data\n||||||| ath10k_download_and_run_otp\n|||||||| ath10k_core_pre_cal_config\n|||||||| ath10k_download_cal_data\n||||||| ath10k_download_cal_dt\n|||||||| ath10k_core_pre_cal_download\n|||||||| ath10k_download_cal_data\n||||||| ath10k_download_cal_eeprom\n|||||||| ath10k_download_cal_data\n||||||| ath10k_download_cal_file\n|||||||| ath10k_core_pre_cal_download\n|||||||| ath10k_download_cal_data\n||||||| ath10k_download_cal_nvmem\n|||||||| ath10k_core_pre_cal_download\n|||||||| ath10k_download_cal_data\n|||| ath10k_core_fetch_board_data_api_n\n||||| ath10k_core_fetch_board_file\n|||| ath10k_core_fetch_firmware_api_n\n||||| ath10k_core_fetch_firmware_files\n|||||| ath10k_core_probe_fw\n|||| ath10k_fetch_cal_file\n||||| ath10k_core_fetch_firmware_files\n||| ath11k_core_firmware_request\n|||| ath11k_core_fetch_board_data_api_1\n||||| ath11k_core_fetch_bdf\n|||||| ath11k_qmi_load_bdf_qmi\n||||||| ath11k_qmi_event_load_bdf\n|||||||| ath11k_qmi_driver_event_work\n///////// ath11k_qmi_init_service\n\\\\\\\\\\\\\\\\\\ func\n|||||||| ath11k_qmi_event_server_arrive\n||||| ath11k_core_fetch_regdb\n|||||| ath11k_qmi_load_bdf_qmi\n|||| ath11k_core_fetch_board_data_api_n\n||||| ath11k_core_fetch_bdf\n||||| ath11k_core_fetch_regdb\n|||| ath11k_fw_request_firmware_api_n\n||||| ath11k_fw_pre_init\n|||||| ath11k_core_pre_init\n/////// core.c\n|||| ath11k_qmi_load_bdf_qmi\n|||| ath11k_qmi_m3_load\n||||| ath11k_qmi_wlanfw_m3_info_send\n|||||| ath11k_qmi_driver_event_work\n||| btbcm_initialize\n//// btbcm.c\n|||| btbcm.h\n|||| btbcm_finalize\n///// btbcm.c\n||||| btbcm.h\n||||| btbcm_setup_patchram\n////// btbcm.c\n////// btusb_probe\n\\\\\\\\\\\\ setup\n|||||| btbcm.h\n|||| btbcm_setup_patchram\n||| btintel_download_fw\n|||| btintel_bootloader_setup\n||||| btintel_setup_combined\n////// btintel_configure_setup\n\\\\\\\\\\\\ setup\n||| btintel_prepare_fw_download_tlv\n|||| btintel_bootloader_setup_tlv\n///// btintel.c\n||||| btintel.h\n||||| btintel_setup_combined\n||| try_firmware_load\n|||| intel_uc_fw_fetch\n||||| __uc_fetch_firmwares\n////// intel_uc.c\n\\\\\\\\\\\\ init_fw\n|| firmware_request_platform\n/// main.c\n|| request_firmware\n/// main.c\n||| adf_ae_fw_load\n|||| adf_dev_init\n||||| adf_dev_up\n////// adf_init.c\n|||||| adf_ctl_ioctl_dev_start\n||||||| adf_ctl_ioctl\n//////// adf_ctl_drv.c\n\\\\\\\\\\\\\\\\ unlocked_ioctl\n|||||| adf_dev_restart\n/////// adf_init.c\n||||||| adf_device_reset_worker\n//////// adf_dev_aer_schedule_reset\n\\\\\\\\\\\\\\\\ func\n|||||| adf_probe\n/////// adf_drv.c\n\\\\\\\\\\\\\\ probe\n|||||| adf_probe\n/////// adf_drv.c\n\\\\\\\\\\\\\\ probe\n|||||| adf_probe\n/////// adf_drv.c\n\\\\\\\\\\\\\\ probe\n|||||| adf_probe\n/////// adf_drv.c\n\\\\\\\\\\\\\\ probe\n|||||| adf_probe\n/////// adf_drv.c\n\\\\\\\\\\\\\\ probe\n|||||| adf_probe\n/////// adf_drv.c\n\\\\\\\\\\\\\\ probe\n|||||| adf_slot_reset\n/////// adf_aer.c\n\\\\\\\\\\\\\\ slot_reset\n|||||| adf_sriov_configure\n/////// adf_drv.c\n/////// adf_drv.c\n/////// adf_drv.c\n/////// adf_sriov.c\n\\\\\\\\\\\\\\ sriov_configure\n||||||| adf_common_drv.h\n||| af9013_download_firmware\n|||| af9013_probe\n///// af9013.c\n\\\\\\\\\\ probe\n||| ag6xx_setup\n//// hci_ag6xx.c\n\\\\\\\\ setup\n||| ar5523_load_firmware\n|||| ar5523_probe\n///// ar5523.c\n\\\\\\\\\\ probe\n||| as102_fw_upload\n|||| as102_dvb_register\n||||| as102_usb_probe\n////// as102_usb_drv.c\n\\\\\\\\\\\\ probe\n||| ath3k_load_patch\n|||| ath3k_probe\n///// ath3k.c\n\\\\\\\\\\ probe\n||| ath3k_load_syscfg\n|||| ath3k_probe\n||| ath3k_probe\n||| ath6kl_fetch_fw_apin\n|||| ath6kl_init_fetch_firmwares\n||||| ath6kl_core_init\n////// core.c\n|||||| ath6kl_usb_probe\n/////// usb.c\n\\\\\\\\\\\\\\ probe\n||| ath6kl_get_fw\n|||| ath6kl_fetch_board_file\n||||| ath6kl_init_fetch_firmwares\n|||| ath6kl_fetch_fw_file\n||||| ath6kl_fetch_fw_api1\n|||||| ath6kl_init_fetch_firmwares\n|||| ath6kl_fetch_otp_file\n||||| ath6kl_fetch_fw_api1\n|||| ath6kl_fetch_patch_file\n||||| ath6kl_fetch_fw_api1\n|||| ath6kl_fetch_testmode_file\n||||| ath6kl_init_fetch_firmwares\n|||| ath6kl_fetch_testscript_file\n||||| ath6kl_fetch_fw_api1\n|||| check_device_tree\n||||| ath6kl_fetch_board_file\n||||| init.c\n|| request_firmware_direct\n/// main.c\n||| btintel_load_ddc_config\n//// btintel.c\n|||| btintel.h\n|||| btintel_bootloader_setup\n|||| btintel_bootloader_setup_tlv\n||| drm_hdcp_request_srm\n|||| drm_hdcp_check_ksvs_revoked\n///// drm_hdcp_helper.c\n||||| hdcp2_authenticate_repeater_topology\n|||||| hdcp2_authenticate_sink\n||||||| hdcp2_authenticate_and_encrypt\n|||||||| _intel_hdcp2_enable\n||||| hdcp2_authentication_key_exchange\n|||||| hdcp2_authenticate_sink\n||||| intel_hdcp_auth\n|||||| intel_hdcp1_enable\n||||||| _intel_hdcp_enable\n|||||||| intel_hdcp_enable\n|||||||| intel_hdcp_update_pipe\n||||| intel_hdcp_auth_downstream\n|||||| intel_hdcp_auth\n||| request_microcode_amd\n//// amd.c\n\\\\\\\\ request_microcode_fw\n||| request_microcode_fw\n//// intel.c\n\\\\\\\\ request_microcode_fw\n|| request_firmware_into_buf\n/// main.c\n||| i2c_slave_init_eeprom_data\n|||| i2c_slave_eeprom_probe\n///// i2c-slave-eeprom.c\n\\\\\\\\\\ probe\n|| request_firmware_work_func\n/// request_firmware_nowait\n\\\\\\ func\n|| request_partial_firmware_into_buf\n/// main.c\n| cachefiles_get_security_ID\n|| cachefiles_add_cache\n||| cachefiles_daemon_bind\n//// daemon.c\n\\\\\\\\ handler\n| call_usermodehelper_exec_async\n// call_usermodehelper_exec_sync\n// call_usermodehelper_exec_work\n\\\\ fn\n| ff_layout_alloc_lseg\n// flexfilelayout.c\n\\\\ alloc_lseg\n| get_backchannel_cred\n|| setup_callback_client\n||| nfsd4_process_cb_update\n|||| nfsd4_run_cb_work\n///// nfsd4_init_cb\n\\\\\\\\\\ func\n| init_cifs_idmap\n|| init_cifs\n/// cifsfs.c\n| init_cifs_spnego\n|| init_cifs\n| init_dns_resolver\n// dns_key.c\n| nfs_idmap_init\n|| init_nfs_v4\n/// nfs4super.c\n| target_core_init_configfs\n// target_core_configfs.c\n\n\n回复格式（**请严格按照格式回复**）：\n<think process> 一步一步表述你的思考过程，以及必要的解释 </think process>\n<pkg install cmd> 能直接在 shell 中执行的编译依赖安装命令，以 apt install 或者 pip install 开头，基于 debian 系统，不要加入任何 markdown 语法的前后缀 (如 apt install xxx)。如果没有必要，则留空，**不要在这里输出任何内容** </pkg install cmd>\n<code> 你的 C 语言代码，不要加入任何 markdown 语法的前后缀 </code>\n<code name> C 语言代码的文件名，应该符合 test_case_*.c 的格式 </code name>\n<compile cmd> 能够直接在 shell 中执行的编译命令，工作目录是 C 语言代码所在目录，不要加入任何 markdown 语法的前后缀 (如 gcc -lpthread test_case_netfilter.c -o test_case_netfilter) </compile cmd>\n' additional_kwargs={} response_metadata={}
