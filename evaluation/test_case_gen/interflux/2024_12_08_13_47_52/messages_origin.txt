content='我是 Linux 内核安全研究人员，我询问的问题带有一定的专业性。\n请以专业的 Linux 内核安全的角度回答我的问题。\n如提供格式，请严格按照格式要求回答。\n\n请根据我接下来提供的**内核函数**的调用栈，跟随我的指示一步一步地编写**用户态程序**。\n你编写的**用户态程序**是一个测试用例，目的是使内核调用到这个**内核函数**。\n如果有代码，代码应该是**C语言**编写的**单文件**。' additional_kwargs={} response_metadata={}
content='内核函数：\nsctp_chunkify\n\n调用栈：\n sctp_chunkify\n| _sctp_make_chunk\n|| sctp_make_control\n||| sctp_make_abort\n|||| sctp_abort_pkt_new\n||||| sctp_sf_do_5_1B_init\n////// sm_statetable.c\n\\\\\\\\\\\\ fn\n||||| sctp_sf_do_5_1C_ack\n////// sm_statetable.c\n\\\\\\\\\\\\ fn\n||||| sctp_sf_do_unexpected_init\n|||||| sctp_sf_do_5_2_1_siminit\n/////// sm_statetable.c\n\\\\\\\\\\\\\\ fn\n|||||| sctp_sf_do_5_2_2_dupinit\n/////// sm_statetable.c\n\\\\\\\\\\\\\\ fn\n||||| sctp_sf_send_restart_abort\n|||||| sctp_sf_check_restart_addrs\n||||||| sctp_sf_do_dupcook_a\n|||||||| sctp_sf_do_5_2_4_dupcook\n///////// sm_statetable.c\n\\\\\\\\\\\\\\\\\\ fn\n||||||| sctp_sf_do_unexpected_init\n|||| sctp_make_abort_no_data\n||||| sctp_eat_data\n|||||| sctp_sf_eat_data_6_2\n/////// sm_statetable.c\n\\\\\\\\\\\\\\ fn\n|||||| sctp_sf_eat_data_fast_4_4\n/////// sm_statetable.c\n\\\\\\\\\\\\\\ fn\n|||| sctp_make_abort_user\n||||| sctp_close\n////// socket.c\n\\\\\\\\\\\\ close\n||||| sctp_sendmsg_check_sflags\n|||||| sctp_sendmsg\n/////// socket.c\n\\\\\\\\\\\\\\ sendmsg\n|||| sctp_make_abort_violation\n||||| sctp_sf_abort_violation\n|||||| sctp_sf_eat_data_6_2\n|||||| sctp_sf_eat_data_fast_4_4\n|||||| sctp_sf_violation_chunk\n||||||| sctp_sf_do_4_C\n//////// sm_statetable.c\n\\\\\\\\\\\\\\\\ fn\n||||||| sctp_sf_do_5_1C_ack\n|||||| sctp_sf_violation_chunklen\n||||||| __sctp_sf_do_9_2_reshutack\n|||||||| sctp_sf_do_9_2_reshutack\n///////// sm_statetable.c\n\\\\\\\\\\\\\\\\\\ fn\n|||||||| sctp_sf_do_dupcook_a\n||||||| sctp_sf_backbeat_8_3\n//////// sm_statetable.c\n\\\\\\\\\\\\\\\\ fn\n||||||| sctp_sf_beat_8_3\n//////// sm_statetable.c\n\\\\\\\\\\\\\\\\ fn\n||||||| sctp_sf_cookie_echoed_err\n//////// sm_statetable.c\n\\\\\\\\\\\\\\\\ fn\n||||||| sctp_sf_discard_chunk\n//////// sm_statetable.c\n\\\\\\\\\\\\\\\\ fn\n|||||||| sctp_sf_do_5_2_3_initack\n///////// sm_statetable.c\n\\\\\\\\\\\\\\\\\\ fn\n||||||| sctp_sf_do_4_C\n||||||| sctp_sf_do_5_1C_ack\n||||||| sctp_sf_do_5_1D_ce\n//////// sm_statetable.c\n\\\\\\\\\\\\\\\\ fn\n||||||| sctp_sf_do_5_1E_ca\n//////// sm_statetable.c\n\\\\\\\\\\\\\\\\ fn\n||||||| sctp_sf_do_5_2_4_dupcook\n|||||| sctp_sf_violation_ctsn\n||||||| sctp_sf_do_9_2_shut_ctsn\n//////// sm_statetable.c\n\\\\\\\\\\\\\\\\ fn\n||||||| sctp_sf_do_9_2_shutdown\n//////// sm_statetable.c\n\\\\\\\\\\\\\\\\ fn\n||||||| sctp_sf_eat_sack_6_2\n//////// sm_statetable.c\n\\\\\\\\\\\\\\\\ fn\n|||| sctp_make_new_encap_port\n||||| sctp_sf_new_encap_port\n|||||| sctp_sf_do_unexpected_init\n|||| sctp_make_violation_max_retrans\n||||| sctp_cmd_assoc_failed\n|||||| sctp_cmd_interpreter\n||||||| sctp_side_effects\n|||||||| sctp_do_sm\n|||| sctp_make_violation_paramlen\n||||| sctp_process_inv_paramlength\n|||||| sctp_verify_init\n||||||| sctp_sf_do_5_1B_init\n||||||| sctp_sf_do_5_1C_ack\n||||||| sctp_sf_do_unexpected_init\n|||||| sctp_verify_param\n||||||| sctp_verify_init\n||||| sctp_sf_violation_paramlen\n|||||| sctp_sf_beat_8_3\n|||||| sctp_sf_do_asconf\n/////// sm_statetable.c\n\\\\\\\\\\\\\\ fn\n|||||| sctp_sf_do_asconf_ack\n/////// sm_statetable.c\n\\\\\\\\\\\\\\ fn\n|||||| sctp_sf_do_reconf\n/////// sm_statetable.c\n\\\\\\\\\\\\\\ fn\n|||||| sctp_sf_operr_notify\n/////// sm_statetable.c\n\\\\\\\\\\\\\\ fn\n|||| sctp_sf_do_asconf_ack\n|||| sctp_sf_do_assoc_update\n||||| sctp_sf_do_dupcook_a\n||||| sctp_sf_do_dupcook_b\n|||||| sctp_sf_do_5_2_4_dupcook\n|||| sctp_sf_t5_timer_expire\n///// sm_statetable.c\n\\\\\\\\\\ fn\n||| sctp_make_asconf\n|||| sctp_make_asconf_set_prim\n||||| sctp_setsockopt_peer_primary_addr\n|||||| sctp_setsockopt\n/////// socket.c\n\\\\\\\\\\\\\\ setsockopt\n|||| sctp_make_asconf_update_ip\n||||| sctp_send_asconf_add_ip\n|||||| sctp_asconf_mgmt\n||||||| sctp_addr_wq_timeout_handler\n//////// sctp_defaults_init\n\\\\\\\\\\\\\\\\ func\n|||||| sctp_setsockopt_bindx\n||||||| sctp_bind_add\n//////// socket.c\n\\\\\\\\\\\\\\\\ bind_add\n||||||| sctp_setsockopt\n||||| sctp_send_asconf_del_ip\n|||||| sctp_asconf_mgmt\n|||||| sctp_setsockopt_bindx\n||| sctp_make_asconf_ack\n|||| sctp_process_asconf\n||||| sctp_sf_do_asconf\n||| sctp_make_auth\n|||| sctp_packet_bundle_auth\n||||| sctp_packet_append_chunk\n|||||| __sctp_outq_flush_rtx\n||||||| sctp_outq_flush_rtx\n|||||||| sctp_outq_flush_data\n|||||| sctp_abort_pkt_new\n|||||| sctp_packet_config\n||||||| sctp_ootb_pkt_new\n|||||||| sctp_abort_pkt_new\n|||||||| sctp_send_stale_cookie_err\n|||||||| sctp_sf_abort_violation\n|||||||| sctp_sf_new_encap_port\n|||||||| sctp_sf_shut_8_4_5\n|||||||| sctp_sf_tabort_8_4_8\n||||||| sctp_outq_flush_rtx\n||||||| sctp_outq_select_transport\n|||||||| sctp_outq_flush_ctrl\n|||||||| sctp_outq_flush_data\n||||||| sctp_packet_singleton\n|||||||| sctp_outq_flush_ctrl\n|||||| sctp_packet_singleton\n|||||| sctp_packet_transmit_chunk\n||||||| sctp_outq_flush_ctrl\n||||||| sctp_outq_flush_data\n|||||| sctp_send_stale_cookie_err\n|||||| sctp_sf_abort_violation\n|||||| sctp_sf_new_encap_port\n|||||| sctp_sf_shut_8_4_5\n|||||| sctp_sf_tabort_8_4_8\n||| sctp_make_cookie_ack\n|||| sctp_sf_do_5_1D_ce\n|||| sctp_sf_do_dupcook_a\n|||| sctp_sf_do_dupcook_b\n|||| sctp_sf_do_dupcook_d\n||||| sctp_sf_do_5_2_4_dupcook\n||| sctp_make_cookie_echo\n|||| sctp_cmd_interpreter\n|||| sctp_sf_t1_cookie_timer_expire\n///// sm_statetable.c\n\\\\\\\\\\ fn\n||| sctp_make_cwr\n|||| sctp_do_ecn_ecne_work\n||||| sctp_cmd_interpreter\n||| sctp_make_ecne\n|||| sctp_get_ecne_prepend\n||||| sctp_packet_config\n||| sctp_make_fwdtsn\n|||| sctp_generate_fwdtsn\n///// stream_interleave.c\n\\\\\\\\\\ generate_ftsn\n||| sctp_make_heartbeat\n|||| sctp_sf_heartbeat\n||||| sctp_sf_do_asconf\n||||| sctp_sf_do_prm_requestheartbeat\n////// sm_statetable.c\n\\\\\\\\\\\\ fn\n||||| sctp_sf_sendbeat_8_3\n////// sm_statetable.c\n\\\\\\\\\\\\ fn\n|||| sctp_sf_send_probe\n///// sm_statetable.c\n\\\\\\\\\\ fn\n||||| sctp_sf_backbeat_8_3\n|| sctp_make_data\n||| sctp_make_datafrag_empty\n//// stream_interleave.c\n\\\\\\\\ make_datafrag\n|| sctp_make_idata\n||| sctp_make_idatafrag_empty\n//// stream_interleave.c\n\\\\\\\\ make_datafrag\n| sctp_rcv\n|| sctp4_rcv\n/// protocol.c\n\\\\\\ handler\n|| sctp6_rcv\n/// ipv6.c\n\\\\\\ handler\n|| sctp_udp_rcv\n/// sctp_udp_sock_start\n\\\\\\ encap_rcv\n\n\n回复格式（**请严格按照格式回复**）：\n<think process> 一步一步表述你的思考过程，以及必要的解释 </think process>\n<pkg install cmd> 能直接在 shell 中执行的编译依赖安装命令，以 apt install 或者 pip install 开头，基于 debian 系统，不要加入任何 markdown 语法的前后缀 (如 apt install xxx)。如果没有必要，则留空，**不要在这里输出任何内容** </pkg install cmd>\n<code> 你的 C 语言代码，不要加入任何 markdown 语法的前后缀 </code>\n<code name> C 语言代码的文件名，应该符合 test_case_*.c 的格式 </code name>\n<compile cmd> 能够直接在 shell 中执行的编译命令，工作目录是 C 语言代码所在目录，不要加入任何 markdown 语法的前后缀 (如 gcc -lpthread test_case_netfilter.c -o test_case_netfilter) </compile cmd>\n' additional_kwargs={} response_metadata={}
