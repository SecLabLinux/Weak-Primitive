content='我是 Linux 内核安全研究人员，我询问的问题带有一定的专业性。\n请以专业的 Linux 内核安全的角度回答我的问题。\n如提供格式，请严格按照格式要求回答。\n\n请根据我接下来提供的**内核函数**的调用栈，跟随我的指示一步一步地编写**用户态程序**。\n你编写的**用户态程序**是一个测试用例，目的是使内核调用到这个**内核函数**。\n如果有代码，代码应该是**C语言**编写的**单文件**。' additional_kwargs={} response_metadata={}
content='内核函数：\nget_mountpoint\n\n调用栈：\n get_mountpoint\n| attach_recursive_mnt\n|| do_move_mount\n||| __do_sys_move_mount\n|||| __se_sys_move_mount\n||||| __ia32_sys_move_mount\n|||||| ia32_sys_call\n||||||| do_syscall_32_irqs_on\n|||||||| __do_fast_syscall_32\n|||||||| common.c\n|||||||| do_int80_emulation\n||||| __x64_sys_move_mount\n////// syscall_64.c\n\\\\\\\\\\\\ sys_call_table\n|||||| x32_sys_call\n||||||| do_syscall_x32\n|||||||| do_syscall_64\n|||||| x64_sys_call\n||||||| do_syscall_x64\n|||||||| do_syscall_64\n|||| namespace.c\n||| do_move_mount_old\n|||| path_mount\n||||| do_mount\n|||||| __do_sys_mount\n||||||| __se_sys_mount\n|||||||| __ia32_sys_mount\n|||||||| __x64_sys_mount\n///////// syscall_64.c\n\\\\\\\\\\\\\\\\\\ sys_call_table\n||||||| namespace.c\n||||| init_mount\n|||||| devtmpfs_mount\n||||||| prepare_namespace\n|||||||| kernel_init_freeable\n|||||| devtmpfs_setup\n||||||| devtmpfsd\n//////// devtmpfs_init\n\\\\\\\\\\\\\\\\ threadfn\n|||||| do_mount_root\n||||||| do_mounts.c\n||||||| mount_nfs_root\n|||||||| do_mounts.c\n|||||||| mount_root\n||||||| mount_nodev_root\n|||||||| mount_root\n||||||| mount_root_generic\n|||||||| handle_initrd\n|||||||| mount_block_root\n|||||||| mount_root\n|||||| handle_initrd\n|||||| init_linuxrc\n/////// handle_initrd\n\\\\\\\\\\\\\\ init\n|||||| prepare_namespace\n|| graft_tree\n||| do_add_mount\n|||| do_new_mount_fc\n||||| do_new_mount\n|||||| path_mount\n|||| finish_automount\n||||| follow_automount\n|||||| __traverse_mounts\n||||||| traverse_mounts\n|||||||| follow_down\n///////// namei.c\n|||||||| handle_mounts\n||| do_loopback\n|||| path_mount\n| do_lock_mount\n|| do_move_mount\n|| lock_mount\n||| __do_sys_pivot_root\n|||| __se_sys_pivot_root\n||||| __ia32_sys_pivot_root\n|||||| ia32_sys_call\n||||| __x64_sys_pivot_root\n////// syscall_64.c\n\\\\\\\\\\\\ sys_call_table\n|||||| x32_sys_call\n|||||| x64_sys_call\n|||| namespace.c\n||| do_loopback\n||| do_new_mount_fc\n| finish_automount\n\n\n回复格式（**请严格按照格式回复**）：\n<think process> 一步一步表述你的思考过程，以及必要的解释 </think process>\n<pkg install cmd> 能直接在 shell 中执行的编译依赖安装命令，以 apt install 或者 pip install 开头，基于 debian 系统，不要加入任何 markdown 语法的前后缀 (如 apt install xxx)。如果没有必要，则留空，**不要在这里输出任何内容** </pkg install cmd>\n<code> 你的 C 语言代码，不要加入任何 markdown 语法的前后缀 </code>\n<code name> C 语言代码的文件名，应该符合 test_case_*.c 的格式 </code name>\n<compile cmd> 能够直接在 shell 中执行的编译命令，工作目录是 C 语言代码所在目录，不要加入任何 markdown 语法的前后缀 (如 gcc -lpthread test_case_netfilter.c -o test_case_netfilter) </compile cmd>\n' additional_kwargs={} response_metadata={}
