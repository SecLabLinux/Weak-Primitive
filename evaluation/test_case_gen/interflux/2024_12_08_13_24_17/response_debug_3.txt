<think process>  
根据报错信息 `/bin/sh: 1: sudo: not found`，这个问题并不是出在 C 代码的编译上，而是运行时执行 shell 命令时发生了错误。错误表明系统中没有找到 `sudo` 命令。虽然您已经安装了 `sudo`，但错误信息表明 `sudo` 可能并未正确安装或无法在当前环境中访问。

### 错误分析：
1. `sudo` 可能没有正确安装，或者当前的执行环境没有正确配置 `sudo` 路径。可能的情况包括：
   - 系统路径没有包含 `sudo` 的安装目录。
   - 如果是在一个特定的容器或用户环境中执行，可能没有 `sudo` 权限。
   
2. `system()` 调用中的 `sudo` 依赖于用户拥有的权限。在没有 `sudo` 的情况下执行可能会导致错误。可以通过以下方法解决：

   - 确保系统中已安装 `sudo` 工具。
   - 如果已经安装 `sudo`，检查环境变量（如 `PATH`）是否包含 `sudo` 的路径。
   - 如果您已经是 root 用户，可以直接去掉 `sudo`，从而避免依赖权限提升。

### 解决方案：
- **安装 sudo**：如果 `sudo` 没有安装，可以尝试重新安装并检查是否可以正常执行。
   ```bash
   sudo apt install sudo
   ```
- **去掉 `sudo`**：如果已经是 root 用户或不需要使用 `sudo`，可以修改代码中的 `system()` 调用，去掉 `sudo`，直接运行 `ip` 和 `tc` 命令。

### 修改方案：
1. **去掉 `sudo`**：修改 C 代码中的 `system()` 调用，直接使用 `ip` 和 `tc` 命令。

2. 如果依赖 `sudo` 执行，确保正确安装并配置 `sudo`。

</think process>

<pkg install cmd>  
sudo apt install sudo  
</pkg install cmd>

<code>  
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>

int main() {
    // Step 1: 创建一个虚拟网络接口
    system("ip link add name test0 type veth peer name test1");

    // Step 2: 启动网络接口
    system("ip link set dev test0 up");
    system("ip link set dev test1 up");

    // Step 3: 创建一个 HTB Qdisc
    system("tc qdisc add dev test0 root handle 1: htb default 12");

    // Step 4: 修改 Qdisc，触发 qdisc_alloc
    system("tc qdisc change dev test0 root handle 1: htb default 12");

    // Step 5: 清理资源
    system("ip link set dev test0 down");
    system("ip link set dev test1 down");
    system("ip link delete test0");
    system("ip link delete test1");

    return 0;
}
</code>

<compile cmd>  
gcc test_case_qdisc_alloc.c -o test_case_qdisc_alloc  
</compile cmd>