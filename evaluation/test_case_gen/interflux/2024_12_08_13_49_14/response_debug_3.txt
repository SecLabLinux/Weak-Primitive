<think process>  
从报错信息 `/bin/sh: 1: libnftnl-dev: not found` 来看，问题并非出现在 C 语言代码本身，而是在编译过程中，系统无法找到 `libnftnl-dev` 包。这通常表明执行编译命令时，可能误将 `libnftnl-dev` 包作为命令来执行了。

在错误信息中，`libnftnl-dev: not found` 表示 shell 尝试执行一个叫做 `libnftnl-dev` 的命令，而该命令显然不存在。`libnftnl-dev` 是一个开发库，而不是可执行命令，应该作为依赖安装，并且在编译时通过链接器 (`-lnftnl`) 引用该库。

根据情况，解决方法有两个步骤：

1. **确认并安装 `libnftnl-dev` 包：**
   你已经安装了 `libnftnl-dev`，但是需要确保其路径被正确识别，并且包已正确安装。执行以下命令更新包并确保 `libnftnl-dev` 安装无误：
   
   ```bash
   sudo apt update
   sudo apt install libnftnl-dev
   ```

2. **修改编译命令：**
   编译命令中可能没有正确设置依赖库的路径，或者误将库作为命令执行。正确的编译命令应该通过 `-lnftnl` 链接 `libnftnl` 库，而不是 `libnftnl-dev`。

   编译时，如果头文件无法找到，可能需要通过 `-I` 标志显式指定头文件路径。如果 `nftnl.h` 存在于 `/usr/include/nftnl` 目录下，可以使用 `-I/usr/include/nftnl`。

因此，编译命令应改为：
```bash
gcc -I/usr/include/nftnl -lnftnl test_case_pipapo_clone.c -o test_case_pipapo_clone
```

这样可以确保编译器找到正确的头文件和库文件。

</think process>

<pkg install cmd>  
sudo apt update  
sudo apt install libnftnl-dev  
</pkg install cmd>

<code>  
#include <stdio.h>  
#include <stdlib.h>  
#include <string.h>  
#include <nftnl/nftnl.h>  
#include <nftnl/rule.h>  
#include <nftnl/table.h>  
#include <nftnl/chain.h>  
#include <nftnl/expr.h>  

int main() {  
    struct nftnl_table *table;  
    struct nftnl_chain *chain;  
    struct nftnl_rule *rule;  
    int fd;  

    // 创建 nft 表  
    table = nftnl_table_alloc();  
    nftnl_table_set_family(table, NFPROTO_IPV4);  
    nftnl_table_set_name(table, "test_table");  

    fd = open("/proc/net/netfilter/nf_tables", O_RDWR);  
    if (fd < 0) {  
        perror("Failed to open nf_tables");  
        return 1;  
    }  

    // 添加表  
    if (nftnl_table_write(table, fd) < 0) {  
        perror("Failed to add table");  
        return 1;  
    }  

    // 创建链  
    chain = nftnl_chain_alloc();  
    nftnl_chain_set_table(chain, table);  
    nftnl_chain_set_name(chain, "test_chain");  
    if (nftnl_chain_write(chain, fd) < 0) {  
        perror("Failed to add chain");  
        return 1;  
    }  

    // 创建规则  
    rule = nftnl_rule_alloc();  
    nftnl_rule_set_chain(rule, chain);  
    nftnl_rule_set_expr(rule, NULL);  // 可根据需要设置表达式  
    if (nftnl_rule_write(rule, fd) < 0) {  
        perror("Failed to add rule");  
        return 1;  
    }  

    // 删除规则  
    if (nftnl_rule_delete(rule, fd) < 0) {  
        perror("Failed to delete rule");  
        return 1;  
    }  

    close(fd);  
    nftnl_rule_free(rule);  
    nftnl_chain_free(chain);  
    nftnl_table_free(table);  

    return 0;  
}  
</code>

<compile cmd>  
gcc -I/usr/include/nftnl -lnftnl test_case_pipapo_clone.c -o test_case_pipapo_clone  
</compile cmd>  